import{_ as s,r as a,o as c,c as d,a as e,b as t,d as l,f as i}from"./app-e7c417ae.js";const r={},o=i('<h1 id="增强分析模块部署" tabindex="-1"><a class="header-anchor" href="#增强分析模块部署" aria-hidden="true">#</a> 增强分析模块部署</h1><p>TCA 除开集成业界知名的分析工具之外，也有自主研发的独立工具，作为 TCA 的增强分析模块。</p><p>TCA 增强分析模块，需要用户额外部署 License 鉴权微服务，并邮件申请 License 。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p><strong>1. License申请完全免费！</strong> 2. 优先企业或高校申请License。</p></div><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><ul><li>独立工具：TCA 自主研发的代码分析工具；</li><li>CLS(Common License Server)： TCA 独立工具的 License 鉴权微服务。</li></ul><h2 id="模块功能" tabindex="-1"><a class="header-anchor" href="#模块功能" aria-hidden="true">#</a> 模块功能</h2><ul><li>支持Objective-C/C++代码规范检查；</li><li>支持分析项目的依赖组件；</li><li>支持分析依赖组件是否存在漏洞等问题；</li><li>支持Java/Kotlin API和函数调用链分析；</li><li>支持代码安全、空指针检查、内存泄漏等规则。</li></ul><p><strong>持续更新中……</strong></p><h2 id="tca-体验版增强能力申请" tabindex="-1"><a class="header-anchor" href="#tca-体验版增强能力申请" aria-hidden="true">#</a> TCA 体验版增强能力申请</h2>',10),u={href:"https://tca.tencent.com/",target:"_blank",rel:"noopener noreferrer"},h=i(`<ol><li>向 TCA 团队邮件申请 Client License</li></ol><ul><li>收件邮箱：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>v_cocohwang@tencent.com
v_jiayizhan@tencent.com
yalechen@tencent.com
tommyzhang@tencent.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>申请邮件格式如下：</li></ul><p>主题：<strong>TCA 独立工具 Client License 申请</strong></p><p>正文：</p><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;"></th></tr></thead><tbody><tr><td style="text-align:center;">申请人名称</td><td style="text-align:center;">xxx</td></tr><tr><td style="text-align:center;">申请人所在组织名称</td><td style="text-align:center;">xxx</td></tr><tr><td style="text-align:center;">申请人所在组织类型</td><td style="text-align:center;">可选选项：公司/学校/个人</td></tr><tr><td style="text-align:center;">申请人邮箱</td><td style="text-align:center;">xxx</td></tr><tr><td style="text-align:center;">申请人手机号码</td><td style="text-align:center;">xxx</td></tr><tr><td style="text-align:center;">是否私有化部署</td><td style="text-align:center;">否</td></tr><tr><td style="text-align:center;">体验申请用途</td><td style="text-align:center;">xxx</td></tr></tbody></table>`,7),v={start:"2"},g={href:"https://github.com/Tencent/CodeAnalysis/blob/main/client/config.ini",target:"_blank",rel:"noopener noreferrer"},m=e("code",null,"config.ini",-1),b=i(`<div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code>[LICENSE_CONFIG]
; [可选]使用独立工具时，需要填写，默认不需要
; License服务的域名和端口
URL=https://tca.tencent.com
BASE_PATH=server/license
LICENSE=&lt;Client License&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置完成之后，便可以在 TCA 体验版上正常使用增强分析模块能力了。</p><h2 id="tca-私有化部署增强能力申请" tabindex="-1"><a class="header-anchor" href="#tca-私有化部署增强能力申请" aria-hidden="true">#</a> TCA 私有化部署增强能力申请</h2><p>如果用户是在企业内网环境内使用 TCA，并想在内网体验 TCA 的增强分析模块能力，可以参考下面步骤申请。</p><h3 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h3><ul><li>一台 CLS 微服务专属机器，CLS 微服务需要跟该机器绑定</li></ul><div class="custom-container warning"><p class="custom-container-title">注意</p><p><strong>注意：不能随意删除CLS目录</strong></p></div><h3 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h3>`,8),p={href:"https://github.com/Tencent/CodeAnalysis/tree/main/server/cls",target:"_blank",rel:"noopener noreferrer"},x=e("code",null,"server/cls",-1),C=e("code",null,"Server ID",-1),_=e("code",null,"Client License",-1),y=i(`<div class="custom-container warning"><p class="custom-container-title">注意</p><p><strong>注意：需要在 CLS 目录下执行命令</strong></p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ ./cls server
2022-04-13 18:35:29.356510559 +0800 CST [INFO] Version: 20220328.1
2022-04-13 18:35:29.44083463 +0800 CST [INFO] The client license is:
xxx
2022-04-13 18:35:29.454552966 +0800 CST [INFO] License Server ID: xxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>Server ID</code>: 机器码，用于向 TCA 团队申请 License 授权</li><li><code>Client License</code>: 提供给 TCA Client，方便 TCA Client 进行工具鉴权（重要，建议备份留底）</li></ul>`,3),L={start:"2"},f={href:"https://github.com/Tencent/CodeAnalysis/blob/main/client/config.ini",target:"_blank",rel:"noopener noreferrer"},T=e("code",null,"config.ini",-1),A=i(`<div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code>[LICENSE_CONFIG]
; [可选]使用独立工具时，需要填写，默认不需要
; License服务的域名和端口
URL=http://&lt;IP或者域名&gt;:&lt;port&gt;
BASE_PATH=
LICENSE=&lt;Client License&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>注意：URL对应值的最后不需要跟斜杆<code>/</code>.</p></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>不同的部署方式可以根据下面方法修改<code>config.ini</code>配置</p><ul><li>源码部署： <ul><li>修改源码目录下的<code>client/config.ini</code></li><li>重启客户端：<code>./quick_install.sh local start client</code></li></ul></li><li>Docker部署： <ul><li>方式1: 修改源码目录下的<code>.docker_temp/configs/client/config.ini</code>，并重启<code>tca-services</code>容器</li><li>方式2: 进入<code>tca-service</code>容器后，修改<code>/CodeAnalysis/client/config.ini</code>，并退出重启<code>tca-services</code>容器</li><li>重启容器方式：<code>docker restart tca-service</code></li></ul></li><li>Docker-Compose部署: <ul><li>修改源码目录下的<code>client/config.ini</code>，并重启<code>client</code>容器</li><li>重启容器方式：<code>docker-compose restart client</code></li></ul></li></ul></div><ol start="3"><li>向 TCA 团队邮件申请 License</li></ol><ul><li>收件邮箱：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>v_cocohwang@tencent.com
v_jiayizhan@tencent.com
yalechen@tencent.com
tommyzhang@tencent.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>申请邮件格式如下：</li></ul><p>主题：<strong>TCA 独立工具 License 申请</strong></p><p>正文：</p><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;"></th></tr></thead><tbody><tr><td style="text-align:center;">申请人名称</td><td style="text-align:center;">xxx</td></tr><tr><td style="text-align:center;">申请人所在组织名称</td><td style="text-align:center;">xxx</td></tr><tr><td style="text-align:center;">申请人所在组织类型</td><td style="text-align:center;">可选选项：公司/学校/个人</td></tr><tr><td style="text-align:center;">申请人邮箱</td><td style="text-align:center;">xxx</td></tr><tr><td style="text-align:center;">申请人手机号码</td><td style="text-align:center;">xxx</td></tr><tr><td style="text-align:center;">是否私有化部署</td><td style="text-align:center;">是</td></tr><tr><td style="text-align:center;">首次登记的机器码</td><td style="text-align:center;">xxx</td></tr><tr><td style="text-align:center;">体验申请用途</td><td style="text-align:center;">xxx</td></tr><tr><td style="text-align:center;">Client License</td><td style="text-align:center;">xxx</td></tr></tbody></table><ul><li><code>首次登记的机器码</code>: 步骤一中输出的<code>Server ID</code></li><li><code>Client License</code>: 步骤一中输出的<code>Client License</code></li></ul>`,11),S={start:"4"},k={href:"https://github.com/Tencent/CodeAnalysis/blob/main/server/cls/config.yaml",target:"_blank",rel:"noopener noreferrer"},I=e("code",null,"config.yaml",-1),E=i(`<div class="custom-container warning"><p class="custom-container-title">注意</p><p>注意：遵从 yaml 格式，比如：</p><ul><li>键值对中，冒号 <code>:</code> 后面跟一个空白字符，示例 <code>key: value</code>。</li></ul></div><ol start="5"><li>执行以下命令启动 CLS</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./cls server -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6"><li>验证 CLS 进程正常启动</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code># 查找是否存在CLS进程
ps aux|grep cls
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5),D={class:"custom-container warning"},N=e("p",{class:"custom-container-title"},"注意",-1),P=e("br",null,null,-1),w={href:"https://github.com/Tencent/CodeAnalysis/blob/main/server/cls/config.yaml",target:"_blank",rel:"noopener noreferrer"},O=e("code",null,"config.yaml",-1),B=i(`<ol start="7"><li>启动 TCA 分析任务 在 TCA 平台的分析方案里面勾选独立工具相关的规则包，比如依赖组件分析规则包，然后启动一次分析任务，执行正常则表明设置生效。</li></ol><h3 id="cls-运维" tabindex="-1"><a class="header-anchor" href="#cls-运维" aria-hidden="true">#</a> CLS 运维</h3><h4 id="自动重启" tabindex="-1"><a class="header-anchor" href="#自动重启" aria-hidden="true">#</a> 自动重启</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code># 查找CLS进程ID
ps aux|grep cls
# 重启微服务
kill -USR2 &lt;pid&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="网络异常" tabindex="-1"><a class="header-anchor" href="#网络异常" aria-hidden="true">#</a> 网络异常</h4><p>如果以上部署步骤已经完成，但是增强功能还是出现 <code>License check failed! Please check the license. License Server is not available!</code> 异常。可以按照以下步骤进行排查：</p><ul><li>进入任务页面，点击异常工具，下载该工具的执行日志。如果日志中出现以下日志，则表明网络访问CLS异常；</li></ul><div class="language-log line-numbers-mode" data-ext="log"><pre class="language-log"><code>method(head) call fails on error: &lt;urlopen error [Errno 111] Connection refused&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>继续验证。如果是 Docker 或者 Docker-Compose 部署方式的话，进入 TCA Client 所在容器中。如果是远嘛部署，则来到 TCA Client 所在机器上。执行以下命令确认网络是否通路：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ping &lt;config.ini中填写的 CLS IP或者域名&gt;
telnet &lt;config.ini中填写的 CLS IP或者域名&gt; &lt;对应端口&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果网络不通，请排查： <ul><li>防火墙是否开启对应端口；</li><li>CLS 对应域名是否在host中设置；</li><li>是否IP设置错误。</li></ul></li></ul><h5 id="案例分享" tabindex="-1"><a class="header-anchor" href="#案例分享" aria-hidden="true">#</a> 案例分享</h5><p>背景： 小明以 Docker 方式部署 TCA，并在相同宿主机上部署 CLS 服务，然后在 config.ini 中设置的 URL 中的 IP 为 <code>127.0.0.1</code>, 重启后启动增强功能任务遇到上述网络不通异常。<br> 原因： 原因是此时的 <code>127.0.0.1</code> 指向的是 TCA Client 容器自身，而不是部署在宿主机上的 CLS 服务。<br> 解决方案： 将 <code>127.0.0.1</code> 改成宿主机自身IP即可。</p><h4 id="cls-更新" tabindex="-1"><a class="header-anchor" href="#cls-更新" aria-hidden="true">#</a> CLS 更新</h4><ol><li>使用以下命令查找 cls 进程并杀掉进程</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code># 查找CLS进程ID
ps aux|grep cls
# 重启微服务
kill -9 &lt;pid&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>下载最新版的 cls 并覆盖掉其中的 cls 二进制文件</li></ol><div class="custom-container warning"><p class="custom-container-title">注意</p><p>注意：不能删除原来的 cls 目录，只需要替换其中的 cls 二进制文件即可。</p></div><ol start="3"><li>使用以下命令重启 cls 服务</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./cls server -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,20);function F(R,U){const n=a("ExternalLinkIcon");return c(),d("div",null,[o,e("p",null,[t("如果用户平常使用的是 "),e("a",u,[t("TCA 体验版公共服务"),l(n)]),t("，并想在体验版上体验到增强分析模块的分析能力，可以按照下面步骤进行申请配置：")]),h,e("ol",v,[e("li",null,[t("收到 TCA 团队回复邮件之后，在 TCA Client目录的 "),e("a",g,[m,l(n)]),t(" 中配置 CLS 微服务信息，比如")])]),b,e("ol",null,[e("li",null,[t("在 TCA 源码中"),e("a",p,[x,l(n)]),t(" 目录下执行以下命令，获取 "),C,t(" 和 "),_])]),y,e("ol",L,[e("li",null,[t("在 TCA Client目录的 "),e("a",f,[T,l(n)]),t(" 中配置 CLS 微服务信息，比如")])]),A,e("ol",S,[e("li",null,[t("收到 TCA 团队回复邮件之后，在 CLS 目录下的 "),e("a",k,[I,l(n)]),t(" 文件中填写License")])]),E,e("div",D,[N,e("p",null,[t("注意：如果以上命令没有发现 CLS 的进程，则说明 CLS 没有正常启动。"),P,t(" 请尝试更改 "),e("a",w,[O,l(n)]),t(" 文件中的 port 为其他 port，比如8080，目前默认是80端口，然后重新执行步骤5的命令。")])]),B])}const z=s(r,[["render",F],["__file","enhanceDeploy.html.vue"]]);export{z as default};
